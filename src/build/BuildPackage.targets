<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <BuildDependsOn>$(BuildDependsOn);BuildPackage</BuildDependsOn>
  </PropertyGroup>
  <Target Name="BuildPackage" DependsOnTargets="$(BuildPackageDependsOn)" Outputs="$(Packages)" Condition=" '$(BuildPackage)' == 'True' " />
  <Target Name="CoreBuildPackage">
    <ItemGroup Condition=" '$(NuGetToolPath)' == '' ">
      <_exe Include="$(MSBuildThisFileDirectory)..\..\NuGet.CommandLine*\tools\NuGet.exe" />
    </ItemGroup>
    <PropertyGroup Condition=" '$(BuildPackageTool)' == '' ">
      <BuildPackageTool Condition=" '$(OutputType)' == 'Exe' " >True</BuildPackageTool>
      <BuildPackageTool Condition=" '$(OutputType)' == 'Winexe' " >True</BuildPackageTool>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(NuGetToolPath)' == '' ">
      <NuGetToolPath>%(_exe.FullPath)</NuGetToolPath>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(BuildPackageOutputDirectory)' == '' ">
        <BuildPackageOutputDirectory>$(OutDir)</BuildPackageOutputDirectory>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(BuildPackageBasePath)' == '' ">
      <BuildPackageBasePath>$(OutDir)</BuildPackageBasePath>
    </PropertyGroup>
    <PropertyGroup>
      <NugetPackCommand>&quot;$(NuGetToolPath)&quot;</NugetPackCommand>
      <NugetPackCommand>$(NugetPackCommand) pack &quot;$(MSBuildProjectFile)&quot;</NugetPackCommand>
      <!-- Escape the OutDir's trailing slash -->
      <NugetPackCommand Condition="HasTrailingSlash('$(BuildPackageOutputDirectory)')">$(NugetPackCommand) -OutputDirectory &quot;$(BuildPackageOutputDirectory)\&quot;</NugetPackCommand>
      <NugetPackCommand Condition="!HasTrailingSlash('$(BuildPackageOutputDirectory)')">$(NugetPackCommand) -OutputDirectory &quot;$(BuildPackageOutputDirectory)\\&quot;</NugetPackCommand>
      <NugetPackCommand Condition="HasTrailingSlash('$(BuildPackageBasePath)')">$(NugetPackCommand) -BasePath &quot;$(BuildPackageBasePath)\&quot;</NugetPackCommand>
      <NugetPackCommand Condition="!HasTrailingSlash('$(BuildPackageBasePath)')">$(NugetPackCommand) -BasePath &quot;$(BuildPackageBasePath)\\&quot;</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageVersion)' != '' ">$(NugetPackCommand) -Version $(BuildPackageVersion)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageExclude)' != '' ">$(NugetPackCommand) -Exclude $(BuildPackageExclude)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageSymbols)' == 'True' ">$(NugetPackCommand) -Symbols</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageTool)' == 'True' ">$(NugetPackCommand) -Tool</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageNoDefaultExcludes)' == 'True' ">$(NugetPackCommand) -NoDefaultExcludes</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageNoPackageAnalysis)' == 'True' ">$(NugetPackCommand) -NoPackageAnalysis</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageIncludeReferencedProjects)' == 'True' ">$(NugetPackCommand) -IncludeReferencedProjects</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageExcludeEmptyDirectories)' == 'True' ">$(NugetPackCommand) -ExcludeEmptyDirectories</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageProperties)' == '' ">$(NugetPackCommand) -Properties Configuration=$(Configuration)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageProperties)' != '' ">$(NugetPackCommand) -Properties $(BuildPackageProperties)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageAdditionalProperties)' != '' ">$(NugetPackCommand);$(BuildPackageAdditionalProperties)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageDetailed)' == 'True' ">$(NugetPackCommand) -Verbosity detailed</NugetPackCommand>
      <NugetPackCommand>$(NugetPackCommand) -NonInteractive</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageMinClientVersion)' == 'True' ">$(NugetPackCommand) -MinClientVersion $(BuildPackageMinClientVersion)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(BuildPackageMSBuildVersion)' == 'True' ">$(NugetPackCommand) -MSBuildVersion $(BuildPackageMSBuildVersion)</NugetPackCommand>
      <NugetPackCommand Condition=" '$(OsEnvironment)' == 'Unix' ">mono $(NugetPackCommand)</NugetPackCommand>
    </PropertyGroup>
    <Exec ContinueOnError="ErrorAndContinue" ConsoleToMSBuild="True" Command="$(NugetPackCommand)">
      <Output TaskParameter="ConsoleOutput" ItemName="_out" />
    </Exec>
    <PropertyGroup>
      <_Pattern><![CDATA[Successfully created package '(?<package>.+)'.]]></_Pattern>
    </PropertyGroup>
    <ItemGroup>
      <_Matches Include="$([System.Text.RegularExpressions.Regex]::Match('%(_out.Identity)', '$(_Pattern)').Groups['package'].Value)" Condition="$([System.Text.RegularExpressions.Regex]::IsMatch('%(_out.Identity)', '$(_Pattern)'))" />
    </ItemGroup>
    <PropertyGroup>
      <Packages>@(_Matches->'%(FullPath)')</Packages>
    </PropertyGroup>
    <WriteLinesToFile Lines="$(Packages)" File="$(IntermediateOutputPath)$(CleanFile)" />
  </Target>
</Project>